warning: unused import: `self`
 --> src/command/command.rs:9:20
  |
9 |         Icommand::{self, ICommand},
  |                    ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `db::db`
 --> src/commands_handlers/echo.rs:5:22
  |
5 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `echo` should have an upper camel case name
  --> src/commands_handlers/echo.rs:11:12
   |
11 | pub struct echo;
   |            ^^^^ help: convert the identifier to upper camel case: `Echo`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: unused import: `db::db`
 --> src/commands_handlers/get.rs:6:22
  |
6 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `get` should have an upper camel case name
  --> src/commands_handlers/get.rs:10:12
   |
10 | pub struct get {}
   |            ^^^ help: convert the identifier to upper camel case: `Get`

warning: unused import: `db::db`
 --> src/commands_handlers/ping.rs:5:22
  |
5 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `ping` should have an upper camel case name
  --> src/commands_handlers/ping.rs:10:12
   |
10 | pub struct ping {}
   |            ^^^^ help: convert the identifier to upper camel case: `Ping`

warning: unused import: `response::response::response`
 --> src/commands_handlers/set.rs:7:5
  |
7 |     response::response::response,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `set` should have an upper camel case name
  --> src/commands_handlers/set.rs:10:12
   |
10 | pub struct set {}
   |            ^^^ help: convert the identifier to upper camel case (notice the capitalization): `Set`

warning: type `db` should have an upper camel case name
 --> src/inMemory/db.rs:3:12
  |
3 | pub struct db {
  |            ^^ help: convert the identifier to upper camel case: `Db`

warning: type `response` should have an upper camel case name
 --> src/response/response.rs:1:12
  |
1 | pub struct response {
  |            ^^^^^^^^ help: convert the identifier to upper camel case: `Response`

warning: unused variable: `ctx`
  --> src/commands_handlers/echo.rs:23:61
   |
23 | ...ream, ctx: &mut inMemory::db::db) {
   |          ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `command_meta`
  --> src/commands_handlers/ping.rs:23:15
   |
23 |     fn handle(command_meta: crate::command::command::Command, stream: &mut TcpStream,...
   |               ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_command_meta`

warning: unused variable: `ctx`
  --> src/commands_handlers/ping.rs:23:87
   |
23 | ...ream, ctx: &mut inMemory::db::db) {
   |          ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: module `inMemory` should have a snake case name
 --> src/lib.rs:3:9
  |
3 | pub mod inMemory;
  |         ^^^^^^^^ help: convert the identifier to snake case: `in_memory`
  |
  = note: `#[warn(non_snake_case)]` on by default

warning: method `Parse` should have a snake case name
  --> src/command/command.rs:25:12
   |
25 |     pub fn Parse(resp_string: String) -> Result<Command, ()> {
   |            ^^^^^ help: convert the identifier to snake case: `parse`

warning: variable `opCode` should have a snake case name
  --> src/command/command.rs:51:24
   |
51 |     pub fn get_command(opCode: OpCodes, resp_string: String) -> Command {
   |                        ^^^^^^ help: convert the identifier to snake case: `op_code`

warning: module `Icommand` should have a snake case name
 --> src/commands_handlers/mod.rs:1:9
  |
1 | pub mod Icommand;
  |         ^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `icommand`

warning: unused borrow that must be used
  --> src/inMemory/db.rs:17:9
   |
17 |         &value.insert("a".to_owned(), "hello".to_owned());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the borrow produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
17 |         let _ = &value.insert("a".to_owned(), "hello".to_owned());
   |         +++++++

warning: 19 warnings emitted

warning: unused imports: `Write`, `hash::Hash`
 --> src/main.rs:5:5
  |
5 |     hash::Hash,
  |     ^^^^^^^^^^
6 |     io::{Read, Write},
  |                ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Icommand`, `ping`
  --> src/main.rs:13:25
   |
13 |     commands_handlers::{ping, Icommand},
   |                         ^^^^  ^^^^^^^^

warning: unused variable: `handler`
  --> src/main.rs:36:25
   |
36 |                     let handler = command_object.handle(&mut _stream, &mut ctx.clone());
   |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_handler`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.01s
Launching debug configuration:
{
  "type": "lldb",
  "request": "launch",
  "name": "run redis-starter-rust",
  "program": "${workspaceFolder}/target/debug/redis-starter-rust",
  "args": [],
  "cwd": "${workspaceFolder}",
  "sourceMap": {},
  "sourceLanguages": [
    "rust"
  ],
  "env": {
    "RUST_BACKTRACE": "short",
    "CHROME_DESKTOP": "code-oss.desktop",
    "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
    "DEBUGINFOD_URLS": "https://debuginfod.archlinux.org ",
    "DESKTOP_SESSION": "i3",
    "DISPLAY": ":0",
    "ELECTRON_NO_ATTACH_CONSOLE": "1",
    "GDK_BACKEND": "x11",
    "GDMSESSION": "i3",
    "GTK_MODULES": "canberra-gtk-module",
    "HOME": "/home/vroomer",
    "I3SOCK": "/run/user/1000/i3/ipc-socket.522",
    "LANG": "en_US.UTF-8",
    "LOGNAME": "vroomer",
    "MAIL": "/var/spool/mail/vroomer",
    "MOTD_SHOWN": "pam",
    "NO_AT_BRIDGE": "1",
    "ORIGINAL_XDG_CURRENT_DESKTOP": "i3",
    "PATH": "/home/vroomer/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl",
    "PWD": "/home/vroomer",
    "SHELL": "/usr/bin/bash",
    "SHLVL": "0",
    "USER": "vroomer",
    "VSCODE_AMD_ENTRYPOINT": "vs/workbench/api/node/extensionHostProcess",
    "VSCODE_CLI": "1",
    "VSCODE_CODE_CACHE_PATH": "/home/vroomer/.config/Code - OSS/CachedData/5c3e652f63e798a5ac2f31ffd0d863669328dc4c",
    "VSCODE_CRASH_REPORTER_PROCESS_TYPE": "extensionHost",
    "VSCODE_CWD": "/home/vroomer",
    "VSCODE_HANDLES_UNCAUGHT_ERRORS": "true",
    "VSCODE_IPC_HOOK": "/run/user/1000/vscode-ba031f0f-1.88-main.sock",
    "VSCODE_NLS_CONFIG": "{\"locale\":\"en-us\",\"osLocale\":\"en-us\",\"availableLanguages\":{},\"_languagePackSupport\":true}",
    "VSCODE_PID": "214540",
    "XAUTHORITY": "/home/vroomer/.Xauthority",
    "XDG_CURRENT_DESKTOP": "i3",
    "XDG_GREETER_DATA_DIR": "/var/lib/lightdm-data/vroomer",
    "XDG_RUNTIME_DIR": "/run/user/1000",
    "XDG_SEAT": "seat0",
    "XDG_SEAT_PATH": "/org/freedesktop/DisplayManager/Seat0",
    "XDG_SESSION_CLASS": "user",
    "XDG_SESSION_DESKTOP": "i3",
    "XDG_SESSION_ID": "2",
    "XDG_SESSION_PATH": "/org/freedesktop/DisplayManager/Session0",
    "XDG_SESSION_TYPE": "x11",
    "XDG_VTNR": "7",
    "ELECTRON_RUN_AS_NODE": "1"
  }
}
warning: unused import: `self`
 --> src/command/command.rs:9:20
  |
9 |         Icommand::{self, ICommand},
  |                    ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `db::db`
 --> src/commands_handlers/echo.rs:5:22
  |
5 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `echo` should have an upper camel case name
  --> src/commands_handlers/echo.rs:11:12
   |
11 | pub struct echo;
   |            ^^^^ help: convert the identifier to upper camel case: `Echo`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: unused import: `db::db`
 --> src/commands_handlers/get.rs:6:22
  |
6 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `get` should have an upper camel case name
  --> src/commands_handlers/get.rs:10:12
   |
10 | pub struct get {}
   |            ^^^ help: convert the identifier to upper camel case: `Get`

warning: unused import: `db::db`
 --> src/commands_handlers/ping.rs:5:22
  |
5 |     inMemory::{self, db::db},
  |                      ^^^^^^

warning: type `ping` should have an upper camel case name
  --> src/commands_handlers/ping.rs:10:12
   |
10 | pub struct ping {}
   |            ^^^^ help: convert the identifier to upper camel case: `Ping`

warning: unused import: `response::response::response`
 --> src/commands_handlers/set.rs:7:5
  |
7 |     response::response::response,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `set` should have an upper camel case name
  --> src/commands_handlers/set.rs:10:12
   |
10 | pub struct set {}
   |            ^^^ help: convert the identifier to upper camel case (notice the capitalization): `Set`

warning: type `db` should have an upper camel case name
 --> src/inMemory/db.rs:3:12
  |
3 | pub struct db {
  |            ^^ help: convert the identifier to upper camel case: `Db`

warning: type `response` should have an upper camel case name
 --> src/response/response.rs:1:12
  |
1 | pub struct response {
  |            ^^^^^^^^ help: convert the identifier to upper camel case: `Response`

warning: unused variable: `ctx`
  --> src/commands_handlers/echo.rs:23:61
   |
23 | ...ream, ctx: &mut inMemory::db::db) {
   |          ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `command_meta`
  --> src/commands_handlers/ping.rs:23:15
   |
23 |     fn handle(command_meta: crate::command::command::Command, stream: &mut TcpStream,...
   |               ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_command_meta`

warning: unused variable: `ctx`
  --> src/commands_handlers/ping.rs:23:87
   |
23 | ...ream, ctx: &mut inMemory::db::db) {
   |          ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: module `inMemory` should have a snake case name
 --> src/lib.rs:3:9
  |
3 | pub mod inMemory;
  |         ^^^^^^^^ help: convert the identifier to snake case: `in_memory`
  |
  = note: `#[warn(non_snake_case)]` on by default

warning: method `Parse` should have a snake case name
  --> src/command/command.rs:25:12
   |
25 |     pub fn Parse(resp_string: String) -> Result<Command, ()> {
   |            ^^^^^ help: convert the identifier to snake case: `parse`

warning: variable `opCode` should have a snake case name
  --> src/command/command.rs:51:24
   |
51 |     pub fn get_command(opCode: OpCodes, resp_string: String) -> Command {
   |                        ^^^^^^ help: convert the identifier to snake case: `op_code`

warning: module `Icommand` should have a snake case name
 --> src/commands_handlers/mod.rs:1:9
  |
1 | pub mod Icommand;
  |         ^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `icommand`

warning: unused borrow that must be used
  --> src/inMemory/db.rs:17:9
   |
17 |         &value.insert("a".to_owned(), "hello".to_owned());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the borrow produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
17 |         let _ = &value.insert("a".to_owned(), "hello".to_owned());
   |         +++++++

warning: 19 warnings emitted

warning: unused imports: `Write`, `hash::Hash`
 --> src/main.rs:5:5
  |
5 |     hash::Hash,
  |     ^^^^^^^^^^
6 |     io::{Read, Write},
  |                ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Icommand`, `ping`
  --> src/main.rs:13:25
   |
13 |     commands_handlers::{ping, Icommand},
   |                         ^^^^  ^^^^^^^^

warning: unused variable: `handler`
  --> src/main.rs:36:25
   |
36 |                     let handler = command_object.handle(&mut _stream, &mut ctx.clone());
   |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_handler`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.01s
Launching debug configuration:
{
  "type": "lldb",
  "request": "launch",
  "name": "run redis-starter-rust",
  "program": "${workspaceFolder}/target/debug/redis-starter-rust",
  "args": [],
  "cwd": "${workspaceFolder}",
  "sourceMap": {},
  "sourceLanguages": [
    "rust"
  ],
  "env": {
    "RUST_BACKTRACE": "short",
    "CHROME_DESKTOP": "code-oss.desktop",
    "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
    "DEBUGINFOD_URLS": "https://debuginfod.archlinux.org ",
    "DESKTOP_SESSION": "i3",
    "DISPLAY": ":0",
    "ELECTRON_NO_ATTACH_CONSOLE": "1",
    "GDK_BACKEND": "x11",
    "GDMSESSION": "i3",
    "GTK_MODULES": "canberra-gtk-module",
    "HOME": "/home/vroomer",
    "I3SOCK": "/run/user/1000/i3/ipc-socket.522",
    "LANG": "en_US.UTF-8",
    "LOGNAME": "vroomer",
    "MAIL": "/var/spool/mail/vroomer",
    "MOTD_SHOWN": "pam",
    "NO_AT_BRIDGE": "1",
    "ORIGINAL_XDG_CURRENT_DESKTOP": "i3",
    "PATH": "/home/vroomer/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl",
    "PWD": "/home/vroomer",
    "SHELL": "/usr/bin/bash",
    "SHLVL": "0",
    "USER": "vroomer",
    "VSCODE_AMD_ENTRYPOINT": "vs/workbench/api/node/extensionHostProcess",
    "VSCODE_CLI": "1",
    "VSCODE_CODE_CACHE_PATH": "/home/vroomer/.config/Code - OSS/CachedData/5c3e652f63e798a5ac2f31ffd0d863669328dc4c",
    "VSCODE_CRASH_REPORTER_PROCESS_TYPE": "extensionHost",
    "VSCODE_CWD": "/home/vroomer",
    "VSCODE_HANDLES_UNCAUGHT_ERRORS": "true",
    "VSCODE_IPC_HOOK": "/run/user/1000/vscode-ba031f0f-1.88-main.sock",
    "VSCODE_NLS_CONFIG": "{\"locale\":\"en-us\",\"osLocale\":\"en-us\",\"availableLanguages\":{},\"_languagePackSupport\":true}",
    "VSCODE_PID": "214540",
    "XAUTHORITY": "/home/vroomer/.Xauthority",
    "XDG_CURRENT_DESKTOP": "i3",
    "XDG_GREETER_DATA_DIR": "/var/lib/lightdm-data/vroomer",
    "XDG_RUNTIME_DIR": "/run/user/1000",
    "XDG_SEAT": "seat0",
    "XDG_SEAT_PATH": "/org/freedesktop/DisplayManager/Seat0",
    "XDG_SESSION_CLASS": "user",
    "XDG_SESSION_DESKTOP": "i3",
    "XDG_SESSION_ID": "2",
    "XDG_SESSION_PATH": "/org/freedesktop/DisplayManager/Session0",
    "XDG_SESSION_TYPE": "x11",
    "XDG_VTNR": "7",
    "ELECTRON_RUN_AS_NODE": "1"
  }
}
